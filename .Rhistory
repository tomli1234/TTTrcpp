rotate_90_C
rotate_90_C(matrix(1:900, 30, 30))
rotate_90_C
library(TTTrcpp)
rotate_90_C(matrix(1:900, 30, 30))
rotate_90_C
which_equal_C
learn_progress_C
library(TTTrcpp)
learn_progress_C
which_equal_C(1:10,4)
rotate_90_C
rotate_90_C(matrix(1:900, 30, 30))
rotate_90_C(matrix(1:900, 30, 30))
rotate_90_C(matrix(1:900, 30, 30))
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3))
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3))
rotate_90_C(matrix(1:9, 3, 3))
rotate_90_C(rotate_90_C(matrix(1:9, 3, 3)))
rotate_90_C(reflect_row_C(matrix(1:9, 3, 3)))
library(TTTrcpp)
check_status_C
library(TTTrcpp)
library(TTTrcpp)
library(TTTrcpp)
library(TTTrcpp)
library(TTTrcpp)
library(TTTrcpp)
library(TTTrcpp)
library(TTTrcpp)
library(TTTrcpp)
library(TTTrcpp)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3))
matrix(1:9, 3, 3)
reflect_row_C(matrix(1:9, 4, 4))
reflect_row_C(matrix(1:16, 4, 4))
matrix(1:16, 4, 4)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3,3))
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3,3), direction = 1)
reflect_row_C(matrix(1:9, 3,3), direction = 0)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3,3), direction = 1)
reflect_row_C(matrix(1:9, 3,3), direction = 0)
reflect_row_C(matrix(1:9, 3,3), 0)
reflect_row_C(matrix(1:9, 3,3), 1)
reflect_row_C(matrix(1:9, 3,3))
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3,3), 1)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3,3), 1)
library(TTTrcpp)
reflect_row_C( matrix(1:9, 3, 3), 1)
reflect_row_C( matrix(1:9, 3, 3), 2)
library(TTTrcpp)
reflect_row_C( matrix(1:9, 3, 3), 1)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3), 1)
reflect_row_C(matrix(1:9, 3, 3), 0)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3), 1)
reflect_row_C(matrix(1:9, 3, 3), 0)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3), 1)
reflect_row_C(matrix(1:9, 3, 3), 0)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3), 0)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3), 0)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3))
library(TTTrcpp)
reflect_row_C
reflect_row_C(matrix(1:9, 3, 3), 1)
reflect_row_C(matrix(1:9, 3, 3), 0)
library(TTTrcpp)
reflect_row_C
reflect_row_C(matrix(1:9, 3, 3), 0)
reflect_row_C(matrix(1:9, 3, 3), 1)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3), 0)
reflect_row_C(matrix(1:9, 3, 3))
reflect_row_C(matrix(1:9, 3, 3), 1)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3))
reflect_row_C(matrix(1:9, 3, 3), 0)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3), 0)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3), 0)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3), 0)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3))
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3))
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3))
matrix(1:9, 3, 3)
remove.packages('TTTrcpp')
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3))
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3))
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3))
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3), 1)
reflect_row_C(matrix(1:9, 3, 3), 2)
library(TTTrcpp)
reflect_row_C(matrix(1:9, 3, 3), 2)
reflect_row_C(matrix(1:9, 3, 3), 1)
library(TTTrcpp)
reflection_C(matrix(1:9, 3, 3), 1)
library(TTTrcpp)
reflection_C
reflection_C(matrix(1:9, 3, 3), 1)
library(TTTrcpp)
reflection_C
reflection_C(matrix(1:2, 2,2), 1)
reflection_C(matrix(1:2, 2,2), 2)
reflection_C(matrix(1:4, 2,2), 2)
reflection_C(matrix(1:4, 2,2), 1)
t(reflection_C(matrix(1:4, 2,2), 1))
reflection(reflection_C(matrix(1:4, 2,2), 1),1)
reflection_C(reflection_C(matrix(1:4, 2,2), 1),1)
reflection_C(reflection_C(matrix(1:4, 2,2), 1),2)
library(TTTrcpp)
equivalent(1:9)
library(TTTrcpp)
equivalent(1:9)
library(TTTrcpp)
equivalent(1:9)
library(TTTrcpp)
equivalent(1:9)
library(TTTrcpp)
equivalent(1:9)
library(TTTrcpp)
equivalent(1:9)
library(TTTrcpp)
equivalent(1:9)
library(TTTrcpp)
library(TTTrcpp)
equivalent(1:9)
library(TTTrcpp)
equivalent(1:9)
matrix(1:9, 3, 3)
library(TTTrcpp)
matrix(1:9, 3, 3)
library(TTTrcpp)
matrix(1:9, 3, 3)
equivalent(matrix(1:9, 3, 3))
c(equivalent(matrix(1:9, 3, 3)))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
c(equivalent(matrix(1:9, 3, 3)))
library(TTTrcpp)
reflection_C_2
reflection_C
equivalent
library(TTTrcpp)
c(equivalent(matrix(1:9, 3, 3)))
equivalent
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
matrix(equivalent(matrix(1:9, 3, 3)), 3, 3)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
equivalent(matrix(1:9, 3, 3))[3,]
matrix(equivalent(matrix(1:9, 3, 3))[3,], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[2,], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[1,], 3, 3)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
matrix(equivalent(matrix(1:9, 3, 3)), 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[1,], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[2,], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[3,], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[4,], 3, 3)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
mat_to_vec_C
library(TTTrcpp)
library(TTTrcpp)
mat_to_vec_C
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
// [[Rcpp::export]]
reflection_C
equivalent(matrix(1:9, 3, 3))
mat_to_vec_C
library(TTTrcpp)
mat_to_vec_C
library(TTTrcpp)
library(TTTrcpp)
mat_to_vec_C
reflection_C
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
library(TTTrcpp)
library(TTTrcpp)
equivalent(matrix(1:9, 3, 3))
matrix(equivalent(matrix(1:9, 3, 3))[,1], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[1,], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[2,], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[3,], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[4,], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[5,], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[6,], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[7,], 3, 3)
matrix(equivalent(matrix(1:9, 3, 3))[8,], 3, 3)
library(TTTrcpp)
library(TTTrcpp)
equivalent
reflection_C
library(TTTrcpp)
reflection_C
equivalent_C
reflection_C(matrix(1:9, 3, 3))
reflection_C(matrix(1:9, 3, 3), 1)
library(TTTrcpp)
reflection_C
reflection_C(matrix(1:9, 3, 3))
reflection_C(matrix(1:9, 3, 3), 1)
reflection_C(matrix(1:9, 3, 3), 2)
equivalent_C(matrix(1:9, 3, 3))
library(TTTrcpp)
revert_symmetry_C
revert_symmetry_C(matrix(1:9, 3, 3), 1)
library(TTTrcpp)
revert_symmetry_C(matrix(1:9, 3, 3), 1)
library(TTTrcpp)
revert_symmetry_C(matrix(1:9, 3, 3), 1)
revert_symmetry_C(matrix(1:9, 3, 3), 12)
revert_symmetry_C(matrix(1:9, 3, 3), 2)
library(TTTrcpp)
revert_symmetry_C(matrix(1:9, 3, 3), 1)
revert_symmetry_C(matrix(1:9, 3, 3), 2)
revert_symmetry_C(matrix(1:9, 3, 3), 3)
revert_symmetry_C(matrix(1:9, 3, 3), 5)
revert_symmetry_C(matrix(1:9, 3, 3), 4)
revert_symmetry_C(reflection_C(matrix(1:9, 3, 3), 1), 1)
revert_symmetry_C(reflection_C(matrix(1:9, 3, 3), 2), 2)
library(TTTrcpp)
which_equal_C_2(1:10^7, 10^7)
library(microbenchmark)
microbenchmark(which_equal_C_2(1:10^7, 10^7))
microbenchmark(which_equal_C_2(1:10^6, 10^6))
microbenchmark(which_equal_C_2(1:10^6, 1))
library(TTTrcpp)
microbenchmark(which_equal_C_2(1:10^6, 1))
library(TTTrcpp)
which_equal_C_2
which_equal_C_2(1:10^7, 1)
library(microbenchmark)
microbenchmark(which_equal_C_2(1:10^7, 1))
microbenchmark(which_equal_C_2(1:10^7, 10^7))
microbenchmark(which_equal_C_2(1:10^7, 1))
library(TTTrcpp)
library(TTTrcpp)
microbenchmark(which_equal_C_2(1:10^7, 1))
microbenchmark(which_equal_C_2(1:10^7, 10^7))
library(TTTrcpp)
microbenchmark(which_equal_C_2(1:10^7, 10^7))
microbenchmark(which_equal_C_2(1:10^7, 1))
library(TTTrcpp)
microbenchmark(which_equal_C_2(1:10^7, 1))
library(TTTrcpp)
microbenchmark(which_equal_C_2(1:10^7, 1))
library(TTTrcpp)
sum4
sum4(1:50)
library(TTTrcpp)
which_C_find
which_C_find(1:50)
which_C_find(1:300)
which_C_find(1:3001)
library(TTTrcpp)
which_C_find(1:3001)
library(TTTrcpp)
which_C_find(1:3001)
which_C_find(1:30)
which_C_find(1:3)
library(TTTrcpp)
main()
library(TTTrcpp)
main()
library(TTTrcpp)
main()
library(TTTrcpp)
main()
library(TTTrcpp)
check_status_C(rep(-1,25))
check_status_C(rep(-1,25), 0)
check_status_C(rep(-1,25), 1)
check_status_C(rep(1,25), 1)
check_status_C(rep(1,25), 0)
check_status_C(rep(0,25), 0)
library(TTTrcpp)
library(TTTrcpp)
check_status_C(rep(0,25), 0)
library(TTTrcpp)
check_status_C(rep(0,25), 0)
check_status_C(rep(0,25), 1)
check_status_C(rep(0,24), 1)
check_status_C(rep(0,100), 1)
check_status_C(rep(1,100), 1)
check_status_C(rep(-1,100), 1)
c(1,1,1,1,1,rep(-1,20))
check_status_C(c(1,1,1,1,1,rep(-1,20))
)
check_status_C(c(1,1,1,1,1,rep(-1,20)), 1)
check_status_C(c(1,1,1,1,1,rep(-1,20)), 0)
check_status_C(c(1,1,1,0,0,0,0,0,0))
check_status_C(c(1,1,1,0,0,0,0,0,0), 1)
check_status_C(c(1,-1,-1,-1,-1,-1, 0,0,0), 1)
check_status_C(c(1,-1,-1,-1,-1,-1, 0,0,0), 0)
check_status_C(c(1,1,1,-1,-1,-1, 0,0,0), 0)
library(TTTrcpp)
check_status_C(c(1,1,1,-1,-1,-1, 0,0,0), 0)
library(TTTrcpp)
check_status_C(c(1,1,1,-1,-1,-1, 0,0,0), 0)
library(TTTrcpp)
check_status_C(c(1,1,1,-1,-1,-1, 0,0,0), 0)
check_status_C(c(1,1,1,1,-1,-1, 0,0,0), 0)
check_status_C(c(1,1,1,1,1,-1, 0,0,0), 0)
check_status_C(c(1,1,1,1,1,1, 0,0,0), 0)
check_status_C(c(1,1,1,1,1,1, 0,0,0), 1)
check_status_C(c(1,1,1, -1, -1, -1,-1,-1,-1), 1)
check_status_C(c(1,1,1, 1, -1, -1,-1,-1,-1), 1)
check_status_C(c(1,1,1, 1, 1, -1,-1,-1,-1), 1)
library(TTTrcpp)
check_status_C(c(1,1,1, -1, -1, -1,-1,-1,-1), 1)
library(TTTrcpp)
check_status_C(c(1,1,1, -1, -1, -1,-1,-1,-1), 1)
check_status_C(c(1,1,1, -1, -1, -1,-1,-1,-1), 0)
check_status_C(c(1,1,1, -1, -1, -1,-1,-1,-1), 0)
library(TTTrcpp)
library(TTTrcpp)
library(TTTrcpp)
check_status_C(c(1,1,1, -1, -1, -1,-1,-1,-1), 1)
library(TTTrcpp)
library(TTTrcpp)
check_status_C(c(1,1,1, -1, -1, -1,-1,-1,-1), 1)
check_status_C(c(1,1,1, rep(-1, 22)), 1)
check_status_C(c(1,1,1, rep(-1, 22)), 0)
check_status_C(c(1,1,1,1,1, rep(-1, 20)), 0)
check_status_C(c(1,1,1,1,1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 1)
library(TTTrcpp)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 1)
library(TTTrcpp)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,1,1, rep(-1, 20)), 1)
library(TTTrcpp)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 1)
library(TTTrcpp)
library(TTTrcpp)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 0)
library(TTTrcpp)
library(TTTrcpp)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,1,1, rep(-1, 20)), 1)
library(TTTrcpp)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,1,1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,1,1, rep(-1, 20)), 1)
library(TTTrcpp)
library(TTTrcpp)
check_status_C(c(1,1,1,1,1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,1,1, rep(-1, 20)), 0)
library(TTTrcpp)
check_status_C(c(1,1,1,1,1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 0)
library(TTTrcpp)
check_status_C(c(1,1,1,1,-1, rep(-1, 20)), 0)
check_status_C(c(1,1,1,-1,-1, rep(-1, 20)), 0)
check_status_C(c(1,1,1,-1,-1, rep(-1, 20)), 1)
library(TTTrcpp)
check_status_C(c(1,1,1,-1,-1, rep(-1, 20)), 1)
check_status_C(c(1,1,1,-1,-1, -1, -1, -1), 1)
check_status_C(c(1,-1,1,-1,-1, -1, -1, -1), 1)
check_status_C(c(1,-1,1,-1, 1, -1, -1, 1), 1)
check_status_C(c(1,-1,1,-1, 1, 1, -1, 1), 1)
library(TTTrcpp)
check_status_C(c(1,-1,1,-1, 1, 1, -1, 1), 1)
library(TTTrcpp)
check_status_C(c(1,-1,1,-1, 1, 1, -1, 1), 1)
check_status_C(c(1,1,1,-1, 1, 1, -1, 1), 1)
check_status_C(c(1,1,1,-1, -1, -1, -1, -1), 1)
check_status_C(c(1,-1,-1,1, -1, -1,1, -1, -1), 1)
check_status_C(c(1,-1,-1,-1, 1, -1,-1, -1, -1), 1)
check_status_C(c(1,-1,-1,-1, 1, -1,-1, -1, 1), 1)
check_status_C(c(1,-1,-1,-1, 1, -1,-1, -1, 1), 0)
check_status_C(c(1,-1,-1,-1, 1, -1,-1, -1, 1), 1)
library(TTTrcpp)
check_status_C(c(1,-1,-1,-1, 1, -1,-1, -1, 1), 1)
library(TTTrcpp)
check_status_C(c(1,-1,-1,-1, 1, -1,-1, -1, 1), 1)
library(TTTrcpp)
check_status_C(c(1,-1,-1,-1, 1, -1,-1, -1, 1), 1)
check_status_C(c(1,-1,-1,-1, 1, -1,-1, -1, 1), 0)
check_status_C(c(1,-1,-1,1, -1, -1,1, -1, -1), 0)
check_status_C(c(1,-1,-1,1, -1, -1,1, -1, -1), 1)
check_status_C(c(-1,-1,1,-1, 1, -1,1, -1, 1), 1)
check_status_C(c(-1,-1,1,-1, 1, -1,1, -1, 1), 0)
library(TTTrcpp)
library(TTTrcpp)
check_status_C(c(-1,-1,1,-1, 1, -1,1, -1, 1), 1)
check_status_C(rep(1, 25), 1)
check_status_C(rep(1, 25), 0)
check_status_C(rep(1, 5), rep(-1, 20), 0)
check_status_C(c(rep(1, 5), rep(-1, 20)), 0)
check_status_C(c(rep(1, 5), rep(-1, 20)), 1)
check_status_C(rep(c(1,-1,-1,-1,-1), 5), 1)
check_status_C(rep(c(1,-1,-1,-1,-1), 5), 0)
check_status_C(rep(c(-1,-1,-1,-1,-1), 5), 0)
check_status_C(rep(c(-1,-1,-1,-1,-1), 5), 1)
